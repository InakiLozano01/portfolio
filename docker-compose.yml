services:
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - portfolio_network
    healthcheck:
      test: mongosh --eval "db.runCommand('ping').ok" --quiet mongodb://localhost:27017/portfolio
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - portfolio_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: redis-server --save 60 1 --loglevel verbose

  portfolio:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3003:3000"
    volumes:
      - ./public/images:/app/public/images:ro,z
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - portfolio_network
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - MONGODB_URI=mongodb://mongodb:27017/portfolio
      - REDIS_URL=redis://redis:6379
      - SKIP_REDIS_DURING_BUILD=false
      - SKIP_DB_DURING_BUILD=false
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  portfolio_network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
